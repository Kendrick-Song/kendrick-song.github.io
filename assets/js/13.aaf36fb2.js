(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{290:function(s,a,t){s.exports=t.p+"assets/img/image-20230710104819936.f7a15e20.png"},323:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像"}},[s._v("#")]),s._v(" Docker 镜像")]),s._v(" "),a("h2",{attrs:{id:"docker-镜像加载原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像加载原理"}},[s._v("#")]),s._v(" Docker 镜像加载原理")]),s._v(" "),a("blockquote",[a("p",[s._v("UnionFS（联合文件系统）")])]),s._v(" "),a("p",[s._v("Union 文件系统是 Docker 镜像的基础，镜像可以通过分层来进行继承，基于基础镜像可以制作各种具体的应用镜像。拉取镜像时看到的一层层的就是这个。")]),s._v(" "),a("p",[s._v("特性：一次同时加载多个文件系统，但从外部看，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，最终的文件系统会包括所有底层的文件和目录。")]),s._v(" "),a("p",[s._v("UnionFS 主要包括以下两个文件系统：")]),s._v(" "),a("p",[a("strong",[s._v("BootFS：")])]),s._v(" "),a("p",[s._v("位于 Docker 镜像的最底层。主要作用是引导加载系统内核，包含加载器和内核，在加载完成后内核就在内存中了，此时内存的使用权已由 BootFS 转交给内核，系统会卸载 BootFS。不同的 OS 可以共用几乎相同的 BootFS。")]),s._v(" "),a("p",[a("strong",[s._v("RootFS：")])]),s._v(" "),a("p",[s._v("位于 BootFS 之上，是各种不同操作系统的发行版，比如 Ubuntu，CentOS等等，包含系统中的标准目录及文件。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(290),alt:"image-20230710104819936"}})]),s._v(" "),a("p",[s._v("对于一个精简的 OS，RootFS 可以很小，因为它只需要包含最基本的命令、工具和程序库就足够了，不需要引导相关的文件。")]),s._v(" "),a("h2",{attrs:{id:"分层理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分层理解"}},[s._v("#")]),s._v(" 分层理解")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect redis\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RootFS"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"layers"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Layers"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sha256:2edcec3590a4ec7f40cf0743c15d78fb39d8326bc029073b41ef9727da6c851f"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sha256:9b24afeb7c2f21e50a686ead025823cd2c6e9730c013ca77ad5f115c079b57cb"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sha256:4b8e2801e0f956a4220c32e2c8b0a590e6f9bd2420ec65453685246b82766ea1"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sha256:529cdb636f61e95ab91a62a51526a84fd7314d6aab0d414040796150b4522372"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sha256:9975392591f2777d6bf4d9919ad1b2c9afa12f9a9b4d260f45025ec3cc9b18ed"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sha256:8e5669d8329116b8444b9bbb1663dda568ede12d3dbcce950199b582f6e94952"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("所有的 Docker 镜像都起始于一个基础镜像层，当进行修改或增加新的内容时，就会在当前镜像层之上，创建新的层。")]),s._v(" "),a("p",[a("strong",[s._v("Docker 镜像都是只读的")]),s._v("。容器启动时，一个新的可写层被加载到镜像的顶部，这一层就是常说的"),a("strong",[s._v("容器层")]),s._v("，容器层之下都叫镜像层。")]),s._v(" "),a("h2",{attrs:{id:"提交镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交镜像"}},[s._v("#")]),s._v(" 提交镜像")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# docker commit -m="xx" -a="author" CONTAINER [REPOSITORY[:TAG]]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("实例测试：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动默认 Tomcat")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" tomcat01 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3355")]),s._v(":8080 tomcat\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝 webapps.dist/* 到 webapps")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" webapps.dist/* webapps/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# docker commit -a="author" -m="add webapps app" tomcat01 tomcat02:1.0')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("如果想要保存当前容器的状态，就可以通过 commit 来提交，获得一个镜像，类似于 VM 的快照。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);