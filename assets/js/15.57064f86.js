(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{300:function(s,t,e){"use strict";e.r(t);var a=e(14),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"构建-vuepress-容器镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建-vuepress-容器镜像"}},[s._v("#")]),s._v(" 构建 VuePress 容器镜像")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("新建一个名为 "),t("code",[s._v("Dockerfile")]),s._v(" 的文件，并根据 "),t("a",{attrs:{href:"https://vuepress.vuejs.org/zh/guide/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("快速上手 | VuePress (vuejs.org)"),t("OutboundLink")],1),s._v(" 中环境配置的相关步骤编写，具体内容如下：")]),s._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18.16  # 基于 node 18.16 版本构建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" WORK_DIR ./vuepress  # 设置容器内工作目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WORK_DIR")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8080  # 设置容器暴露端口")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" yarn config set registry https://registry.npm.taobao.org/ \\  # Yarn 更换国内源")]),s._v("\n    && yarn init -y \\  # Yarn 项目初始化\n    && yarn add -D vuepress \\  # 将 VuePress 安装为本地依赖\n    && yarn add -D vuepress-plugin-mathjax \\  # 安装 Tex 语法插件\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建 demo 文档，运行容器时宿主机应当绑定挂载到此目录")]),s._v("\n    && mkdir docs \\\n    && echo '# Hello VuePress' > docs/README.md \\\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 package.json 中添加一些 scripts")]),s._v('\n    && sed -i \'$i\\\n  ,"scripts": {\\\n    "docs:dev": "vuepress dev docs",\\\n    "docs:build": "vuepress build docs"\\\n  }\' package.json \\\n    '),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除缓存，最小化镜像")]),s._v("\n    && yarn cache clean\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 为了解决本地服务器启动时报错：Error message "error:0308010C:digital envelope routines::unsupported')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" NODE_OPTIONS --openssl-legacy-provider")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本地启动服务器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" yarn docs:dev")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用 "),t("code",[s._v("docker build")]),s._v(" 命令构建镜像，注意标识镜像的 tag。")])]),s._v(" "),t("li",[t("p",[s._v("使用 "),t("code",[s._v("docker run")]),s._v(" 命令启动容器，具体如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-itd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台运行，可以交互")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定端口")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" my-blog "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器名称")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--mount")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bind,src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/absolute/path/to/docs,target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/vuepress/docs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定挂载")]),s._v("\n\tkendrick-song/vuepress-base:2.0  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像名称")]),s._v("\n")])])]),t("p",[s._v("运行时记得自定义容器名称、绑定挂载路径，并删掉注释。")])]),s._v(" "),t("li",[t("p",[s._v("（可选）使用 "),t("code",[s._v("docker exec -it <the-container-id/name> /bin/bash")]),s._v(" 命令进入容器，查看挂载目录下的文件，确认目录已经正确被挂载。")])]),s._v(" "),t("li",[t("p",[s._v("用浏览器访问 "),t("code",[s._v("127.0.0.1:8080/path/to/docs.html")]),s._v(" 测试 VuePress 服务器正常运行。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("若出现 404，通常情况下是路径出现了问题，具体参考 "),t("a",{attrs:{href:"https://vuepress.vuejs.org/zh/guide/directory-structure.html#%E9%BB%98%E8%AE%A4%E7%9A%84%E9%A1%B5%E9%9D%A2%E8%B7%AF%E7%94%B1",target:"_blank",rel:"noopener noreferrer"}},[s._v("默认的页面路由 | VuePress (vuejs.org)"),t("OutboundLink")],1),s._v("。")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);